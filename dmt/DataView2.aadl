--------------------------------------------------------
--! File generated by asn2aadl v2.0.1: DO NOT EDIT !
--------------------------------------------------------

package DataView

public

-- No more private heap required (we use the space certified compiler)
-- Memory_Required: 0

DATA T_POS
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypes.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-POS";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_POS;

DATA T_POS_Buffer_Max
END T_POS_Buffer_Max;

DATA IMPLEMENTATION T_POS_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_POS
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_POS_Buffer_Max.impl;

DATA T_POS_Buffer
END T_POS_Buffer;

DATA IMPLEMENTATION T_POS_Buffer.impl
    -- Buffer to hold a marshalled data of type T_POS
SUBCOMPONENTS
    Buffer : data T_POS_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_POS_Buffer.impl;

DATA MInt
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypes.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MInt";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END MInt;

DATA MInt_Buffer_Max
END MInt_Buffer_Max;

DATA IMPLEMENTATION MInt_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MInt
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MInt_Buffer_Max.impl;

DATA MInt_Buffer
END MInt_Buffer;

DATA IMPLEMENTATION MInt_Buffer.impl
    -- Buffer to hold a marshalled data of type MInt
SUBCOMPONENTS
    Buffer : data MInt_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MInt_Buffer.impl;

end DataView;
